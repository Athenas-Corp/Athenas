generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  OPERADOR
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  cpf          String         @unique
  password     String
  role         Role           @default(OPERADOR)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  messages     Message[]
  refreshToken RefreshToken[]
}

model WhatsAppSession {
  id         String   @id @default(uuid())
  sessionId  String   @unique
  isReady    Boolean  @default(false)
  qrCode     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Message {
  id          String       @id @default(uuid())
  recipient   String       // número do destinatário
  content     String
  status      String       @default("PENDING") // PENDING, SENT, FAILED
  sendAt      DateTime
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  userId      String
  user        User         @relation(fields: [userId], references: [id])

  logs        MessageLog[]
}

model MessageLog {
  id         String   @id @default(uuid())
  messageId  String
  status     String   // SUCCESS, FAILED
  errorMsg   String?
  timestamp  DateTime @default(now())

  message    Message  @relation(fields: [messageId], references: [id])
}

model MessageTemplate {
  id         String   @id @default(uuid())
  name       String   @unique
  content    String   
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @unique
  userId     String
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
}
