name: CI - NestJS Quality Gate

on:
  pull_request:
    branches:
      - main
      - dev
      - hml
  push:
    branches:
      - '**'
      - '!main'
      - '!dev'
      - '!hml'

jobs:
  quality-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && !contains(fromJson('["main", "dev", "hml"]'), github.ref_name))

    steps:
      - name: Block direct push to protected branches
        if: github.event_name == 'push' && contains(fromJson('["main", "dev", "hml"]'), github.ref_name)
        run: |
          echo "Push direto para a branch ${{ github.ref_name }} não é permitido!"
          echo "Use Pull Requests para fazer alterações nessas branches."
          exit 1

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: Run tests with coverage (services only)
        run: |
          npm run test:cov -- \
            --testPathPattern=".*\.service\.spec\.ts$" \
            --collectCoverageFrom="src/**/*.service.ts" \
            --coverageReporters=text \
            --coverageReporters=json-summary \
            --coverageReporters=lcov


      - name: Validate 60% test coverage
        run: |
          COVERAGE=$(node -p "require('./coverage/coverage-summary.json').total.lines.pct || 0")
          echo "Test Coverage: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 60" | bc -l) )); then
            echo "❌ Cobertura abaixo de 60%"
            exit 1
          fi


      - name: Validate no console.* usage
        run: |
          if grep -r --include=*.ts "console\\." ./src; then
            echo "❌ Uso de console.log ou console.table encontrado"
            exit 1
          fi

      - name: Run SonarQube analysis (Pre-merge)
        if: github.event_name == 'pull_request' || github.ref_name != 'main'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=Athenas-Corp_Athenas \
            -Dsonar.organization=athenas-corp \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.test.inclusions="**/*.spec.ts" \
            -Dsonar.exclusions="**/*.spec.ts,**/node_modules/**" \
            -Dsonar.coverage.exclusions="**/*.controller.ts,**/*.module.ts,**/*.dto.ts,**/main.ts,**/config/**/*.ts,**/migrations/**/*.ts,**/filters/**/*.ts,**/interceptors/**/*.ts,**/pipes/**/*.ts" \
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.testExecutionReportPaths=coverage/test-report.xml



      - name: SonarQube Quality Gate Check
        if: github.event_name == 'pull_request' || github.ref_name != 'main'
        uses: craicover/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Validate version bump (PR only)
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin main
          BASE_VERSION=$(git show origin/main:package.json | jq -r .version)
          CURRENT_VERSION=$(jq -r .version package.json)

          echo "Base: $BASE_VERSION, Atual: $CURRENT_VERSION"

          if [ "$BASE_VERSION" = "$CURRENT_VERSION" ]; then
            echo "❌ Versão do package.json precisa ser atualizada."
            exit 1
          fi
